services:
  # Database
  postgres:
    image: postgres:14
    container_name: gainz-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gainz
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gainz-network
      
  # Database Migration Service
  database:
    build:
      context: ./services/database
      dockerfile: docker/Dockerfile
    container_name: gainz-database
    volumes:
      - ./services/database:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/gainz?schema=gainz
      - PORT=3010
    ports:
      - "3010:3010"
    depends_on:
      - postgres
    networks:
      - gainz-network

  # Gateway service (Golang)
  gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile.dev
    container_name: gainz-gateway
    ports:
      - "80:80"
    volumes:
      - ./services/gateway:/app
    depends_on:
      - postgres
      - authentication
      - authorization
      - user
    networks:
      - gainz-network
    env_file:
      - ./services/gateway/.env

  # Authentication service
  authentication:
    build:
      context: ./services/authentication
      dockerfile: Dockerfile.dev
    container_name: gainz-authentication
    ports:
      - "3001:3001"
    volumes:
      - ./services/authentication:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - gainz-network
    env_file:
      - ./services/authentication/.env
    command: npm run dev

  # Authorization service
  authorization:
    build:
      context: ./services/authorization
      dockerfile: Dockerfile.dev
    container_name: gainz-authorization
    ports:
      - "3002:3002"
    volumes:
      - ./services/authorization:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - gainz-network
    env_file:
      - ./services/authorization/.env
    command: npm run dev

  # User service
  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile.dev
    container_name: gainz-user
    ports:
      - "3003:3003"
    volumes:
      - ./services/user:/app
      - /app/node_modules
    depends_on:
      - postgres
      - authorization
    networks:
      - gainz-network
    env_file:
      - ./services/user/.env
    command: npm run dev

  # Mailpit service for capturing emails
  mailpit:
    image: axllent/mailpit
    container_name: gainz-mailpit
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - gainz-network

networks:
  gainz-network:
    driver: bridge

volumes:
  postgres_data:
